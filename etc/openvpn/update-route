#!/bin/bash
#script called by OpenVPN to setup routes

vpn_interface="$dev"
vpn_gateway_v4="$route_vpn_gateway"
vpn_gateway_v6="$route_ipv6_gateway_1"
mesh_interface="bat0"

set -x
exec >/var/log/update-route.log 2>&1
date

echo "(I) vpn_interface: '$vpn_interface'"
echo "(I) vpn_gateway (v6): '$vpn_gateway_v6'"
echo "(I) vpn_gateway (v4): '$vpn_gateway_v4'"
echo "(I) mesh_interface: '$mesh_interface'"

#make sure the rule is only applied once
iptables_a() {
	iptables -C $@ || iptables -A $@
}

ip6tables_a() {
	ip6tables -C $@ || ip6tables -A $@
}

# create table if it does not exist yet
ip route show table vpn &> /dev/null || echo 100 vpn >> /etc/iproute2/rt_tables

# setup table (v6)
ip -6 rule del table vpn &> /dev/null
ip -6 route flush table vpn
#ip -6 route add fe80::/64 dev tun0 table vpn
ip -6 route add "$vpn_gateway_v6/64" dev tun0 table vpn
ip -6 route add 2000::/3 dev tun0 table vpn
ip -6 rule add dev "$mesh_interface" table vpn prio 32565

# setup table (v4)
ip rule del table vpn &> /dev/null
ip route flush table vpn
ip route add "$vpn_gateway_v4" dev tun0 table vpn
ip route add default dev tun0 table vpn
ip rule add dev nat64 table vpn prio 32565

# forward traffic between freifunk and the VPN (if the connection originated in freifunk)
ip6tables_a FORWARD -i "$vpn_interface" -o "$mesh_interface" -m state --state ESTABLISHED,RELATED -j ACCEPT
ip6tables_a FORWARD -i "$mesh_interface" -o "$vpn_interface" -j ACCEPT

# allow DNS queries through the VPN
ip6tables_a INPUT -i "$vpn_interface" -p tcp -m tcp --dport domain -m state --state ESTABLISHED -j ACCEPT
ip6tables_a INPUT -i "$vpn_interface" -p udp -m udp --dport domain -m state --state ESTABLISHED -j ACCEPT
iptables_a INPUT -i "$vpn_interface" -p tcp -m tcp --dport domain -m state --state ESTABLISHED -j ACCEPT
iptables_a INPUT -i "$vpn_interface" -p udp -m udp --dport domain -m state --state ESTABLISHED -j ACCEPT

# resolve NAT64 through the VPN
iptables_a FORWARD -i nat64 -o "$vpn_interface" -j ACCEPT
iptables_a FORWARD -i "$vpn_interface" -o nat64 -m state --state ESTABLISHED,RELATED -j ACCEPT

# NAT66 all freifunk traffic
ip6tables_a POSTROUTING --table nat -o "$vpn_interface" -j MASQUERADE
